в	предыдущий	материал	мы	рассмотреть	эксплуатация	уязвимость	переполнение	буфер	стек	в	этот	статья	продолжить	знакомство	с	уязвимость	исполняемый	файл	на	пример	обработка	исключение	и	привилегия	чем	большой	вы	пытаться	разобраться	в	тот	как	работать	компьютер	тем	чаща	вы	слышать	термин	и	если	поискать	что	обозначать	слово	можно	найти	следующий	определение	ядро	это	центральный	часть	операционный	система	который	контролировать	абсолютно	процессор	память	и	том	далее		в	система	всякий	раз	когда	программа	нужно	что	то	сделать	например	записать	дать	в	файл	открыть	сетевой	подключение		она	временно	передавать	ядро	управление	работа	который	заниматься	пользовательский	пространство	хотя	это	определение	довольно	хорошо	описывать	что	такой	ядро	давать	взглянуть	на	следующий	аналогия	всякий	раз	когда	бэтмена	и	остальной	часть	лига	справедливость	сражаться	с	суперзлодей	альфред	ядро	получать	контроль	над	бэтпещера	процессор		чтобы	предоставить	необходимый	для	победа	информация	когда	команда	побеждать	преступник	бэтмена	отпускать	альфред	и	снова	управление	бэтпещера	на	себя	ядро	это	просто	бэкенд	ваш	операционный	система	который	выполнять	весь	тяжёлый	работа	например	управление	память	и	том	плата		в	то	же	время	существовать	пользовательский	пространство	это	адресный	пространство	виртуальный	память	в	который	выполняться	обычный	приложение	как	бэтмена	и	лига	справедливость	обычный	приложение	должный	передавать	управление	ядро	альфред	всякий	раз	когда	требоваться	привилегированный	информация	этот	вид	разделение	привилегия	широко	использоваться	в	компьютер	однако	в	то	время	как	бэтмена	и	лига	справедливость	иметь	только	два	категория	привилегия	у	компьютер	четыре	отдельный	прима	переть	количество	кольцо	зависеть	от	архитектура	процессор	кольцо	защитыкак	можно	увидеть	приложение	выполняться	в	непривилегированный	кольцо	однако	иногда	приложение	требоваться	доступ	к	привилегированный	данные	или	функция	например	создание	сетевой	соединение	функция	управление	память	и	тот	подобный		в	это	случай	приложение	использовать	так	называть	системный	вызов	который	соединять	разный	кольцо	защита	простой	всего	рассматривать	кольцо	защита	как	уровень	в	видеоигра	чтобы	расширить	свой	возможность	в	игра	это	мочь	быть	как	улучшение	оружие	так	и	путешествие	по	разный	миро	или	наконец	спасение	принцесса		игрок	нужно	пройти	через	различный	испытание	если	игрок	попробовать	пропустить	уровень	то	у	он	не	быть	достаточно	сила	или	ресурс	чтобы	победить	босс	так	он	проиграть	марио	потерпеть	неудача	с	ошибка	в	непривилегированный	приложение	попытаться	получить	доступ	к	привилегированный	данные	оно	завершиться	с	ошибка	и	выдать	о	она	в	дополнение	к	попытка	доступ	к	привилегированный	память	или	функция	из	непривилегированный	пользовательский	среда	программа	мочь	завершаться	с	ошибка	по	множество	причина	например	если	программа	пытаться	разделить	что	то	на	ноль	что	как	мы	весь	знать	не	работать		программа	завершиться	с	ошибка	что	на	самый	дело	происходить	когда	программа	так	завершаться	вот	тут	то	и	появляться	структурировать	обработчик	исключение		прежде	чем	говорить	о	тот	что	такой	структурировать	обработчик	исключение	и	как	они	работать	давать	в	качество	пример	рассмотреть	серия	фильм	индиана	джонс	в	фильм	год	поиск	утратить	джонс	и	он	небольшой	группа	отправляться	на	поиск	потерянный	ковчег	по	путь	джонс	и	он	команда	сталкиваться	с	многий	ловушка	такой	как	ядовитый	дротик	и	гигантский	валун	который	запускаться	при	нажатие	на	секретный	пластина	или	при	помощь	переключатель	индиана	и	он	команда	должный	попытаться	пережить	весь	этот	ловушка	и	многий	другой	для	достижение	свой	цель	в	джонс	в	поиск	утратить	ловушка	расставить	по	весь	подземелье	и	пещера	по	который	индиана	и	он	команда	приходиться	перемещаться	этот	ловушка	быть	заложить	за	год	до	тот	как	индиана	джонс	родиться	и	служить	для	защита	золотой	статуя	который	являться	цель	приключение	точно	так	же	программа	иметь	свой	собственный	ловушка	от	несоответствие	привилегия	и	отказ	в	доступ	до	логический	и	арифметический	ошибка	и	у	программа	есть	много	способ	предотвратить	обработать	ошибка	или	неправильный	операция	кроме	тот	программист	мочь	реализовывать	пользовательский	обработчик	исключение	с	помощь	блок	который	пробовать	выполнить	блок	код	и	отлавливать	любой	ошибка	или	исключение	для	они	обработка	в	многий	операционный	система	мы	быть	в	основное	говорить	о	существовать	система	для	обработка	любой	исключение	который	изначально	не	быть	перехватить	внутренний	обработчик	исключение	это	означать	что	если	ошибка	обнаружить	но	не	обрабатываться	должное	образ	операционный	система	использовать	обработка	исключение	и	перенаправить	перехватить	исключение	в	отдельный	структурировать	обработчик	исключение	если	исключение	по	прежний	не	обработаться	должное	образ	приложение	просто	аварийный	завершать	работа	структурный	схема	обработка	один	вещь	на	который	следовать	обратить	внимание	это	то	что	когда	происходить	сбой	программа	с	исключение	она	на	очень	короткий	время	получать	доступ	к	более	высокий	уровень	привилегия	по	мера	извлечение	информация	о	сбой	в	предыдущий	статья	быть	разобрать	переполнение	буфер	стек	и	опасность	или	возможность	если	вы	эксплуатировать	данный	уязвимость	перезапись	дать	в	стек	с	годами	появиться	множество	способ	защита	от	переполнение	буфер	стек	который	быть	внедрить	в	компилятор	и	операционный	система	сейчас	мы	поговорить	о	стек	с	который	использоваться	в	качество	базовый	защита	от	переполнение	такой	название	пошло	из	за	аналогия	который	использоваться	для	описание	данный	механизм	защита	канарейка	в	угольный	шахта	примерно	в	год	джон	скотт	холдейн	предложить	использовать	канарейка	или	другой	теплокровный	животное	в	глубокий	шахта	для	обнаружение	угарный	газа	поскольку	птица	гораздо	более	чувствительный	к	угарный	газа	чем	человек	то	увидеть	что	птица	стать	плохо	узнать	бы	что	произойти	утечка	угарный	газа	и	смочь	бы	выйти	из	пещера	так	же	как	знаменитый	канарейка	в	угольный	шахта	стековый	канарейка	предупреждать	программа	о	тот	что	что	то	не	так	что	позволять	программа	завершить	работа	до	тот	как	какой	либо	вредоносный	операция	это	делаться	следующий	образ	стек	с	канарейкойтака	способ	защита	кажется	довольно	логичный	но	он	от	совершенство	один	из	способ	обход	канарейка	выяснить	где	она	находиться	или	какой	у	значение	чтобы	переписать	использовать	атака	переполнение	однако	как	уже	упоминаться	ранее	значение	стековый	канарейка	большой	случайный	число	так	что	достаточно	сложно	узнать	где	она	находиться	более	тот	когда	разрабатывать	эксплойт	для	приложение	нет	возможность	отладить	программа	и	посмотреть	стек	или	вручную	найти	канарейка	так	как	же	мы	получить	этот	информация	в	это	случай	мы	пригодиться	уязвимость	форматировать	строка	перед	тем	как	перейти	к	описание	давать	что	такой	форматировать	строка	в	многий	язык	программирование	здесь	речь	о	с	есть	функция	вывод	дать		или	что	то	похожий		этот	функция	использоваться	для	форматирование	и	вывод	дать		например	если	нужно	вывести	целочисленный	переменный			в	выше	пример	называться	спецификатор	тип	он	определять	формат	выводить	переменный	существовать	много	полезный	спецификатор	например	который	строковый	значение	просто	текст	как	и	так	далее		однако	для	мы	наиболее	важный	быть	следующий	кто	то	возможно	уже	догадаться	к	что	это	но	давать	рассмотреть	небольшой	пример	боб	только	что	зарегистрироваться	в	система	онлайн	банкинг		когда	боб	заходить	на	сайт	он	встречать	форма	номер	ваш	когда	боб	вводить	номер	свой	банк	отображать	информация	о	он	и	он	мочь	свободно	проверять	и	переводить	свой	деньга	однажды	боб	заходить	на	сайт	свой	банка	но	в	пол	номер	ваш	боб	случайно	делать	опечатка	вместо	тот	чтобы	получить	сообщение	боб	попадать	на	другой	клиент	и	мочь	просматривать	и	переводить	деньга	это	клиент	возможность	отображать	произвольный	информация	огромный	дыра	в	безопасность	однако	возможность	отображать	произвольный	информация	и	манипулировать	она	катастрофический	дыра	в	безопасность	который	и	являться	уязвимость	форматировать	строка	если	пользователь	мочь	напрямую	вводить	строка	в	функция		без	какой	либо	проверка	то	он	мочь	просто	ввести	для	отображение	информация	в	стек	поскольку	как	мы	знать	из	предыдущий	статья	переменный	и	другой	дать	храниться	в	стек	кроме	тот	если	злоумышленник	продолжить	вводить	он	мочь	в	конечный	итог	получить	чрезвычайно	чувствительный	информация	например	указатель	обработчик	исключение	адрес	в	память	куда	функция	должный	перенаправить	ошибка	для	обработка		или	даже	стековый	канарейка	более	тот	даже	просто	возможность	посмотреть	произвольный	дать	из	память	являться	проблема	если	злоумышленник	иметь	полный	доступ	к	вызов		он	также	мочь	перезаписать	дать	использовать	спецификатор	формат	это	означать	что	злоумышленник	мочь	скопировать	и	перезаписать	канарейка	стек	с	правильный	значение	а	затем	выполнить	атака	описать	в	один	статья	или	перезаписать	указатель	возврат	функция	на	какой	либо	другой	вредоносный	программа	давать	посмотреть	на	небольшой	пример	использование	уязвимость	форматировать	строкипримечание	стек	в	выше	пример	теперь	диаграмма	в	один	код	подверженный	уязвимость	сначала	мы	два	переменный	строковый	тип	и	затем	мы	считывать	пользователь	информация	с	помощь	функция		и	сохранять	в	переменный	потом	мы	использовать	функция		с	спецификатор	формат	и	уязвимость	в	выше	код	связать	с	тем	что	пользователь	мочь	напрямую	влиять	на	функция		без	какой	либо	проверка	спецификатор	тип	теперь	взглянуть	на	выше	схема	весь	атака	когда	пользователь	вводить	обычный	текст	ничто	особенный	не	происходить	однако	когда	пользователь	вводить	программа	выводить	содержимое	стек	выводить	содержимое	стек	в	шестнадцатеричный	формат	в	это	пример	специально	быть	использовать	только	основной	текст	и	число	чтобы	он	быть	лёгкий	понять	кроме	тот	если	пользователь	использовать	для	перезапись	файл	кук	стек	и	указатель	возврат	он	смочь	перенаправить	программа	на	вредоносный	код	подобно	атака	перезапись	структурировать	обработчик	исключение	это	атака	связать	с	перезапись	указатель	так	чтобы	он	на	другой	функция	однако	в	то	время	как	атака	быть	основать	на	перезапись	указатель	возврат	для	перенаправление	программа	на	определённый	функция	перезапись	влиять	на	функция	изменять	указатель	обработчик	исключение	а	затем	вызывать	исключение	чтобы	программа	перейти	к	выполнение	наш	вредоносный	функция	вы	мочь	провести	аналогия	с	махинация	с	страховка	у	боб	есть	лодка	с	огромный	страхов	покрытие	выплата	по	страховой	случай	превышать	сумма	который	боб	мочь	выручить	при	обычный	продажа	боб	быть	преступник	решать	что	он	попытаться	обмануть	страховой	компания	устроить	утечка	газа	и	взорвать	лодка	чтобы	он	мочь	потребовать	страховой	деньга	через	пара	неделя	планирование	боб	взрывать	свой	лодка	после	некоторый	расследование	страховой	компания	не	мочь	окончательно	доказать	что	лодка	боб	на	самый	дело	взорваться	не	в	результат	утечка	газа	и	вынудить	оплатить	заявить	сумма	подобно	мошенничество	с	страховка	боб	перезапись	заставлять	обработчик	исключение	переходить	к	программа	злоумышленник	а	не	обрабатывать	исключение	должное	образ	такой	атака	мочь	быть	направить	на	уязвимость	форматировать	строка	или	на	переполнение	буфер	стек	поскольку	указатель	обработчик	исключение	это	просто	адрес	который	храниться	в	стек	чтобы	воспользоваться	уязвимость	злоумышленник	потребоваться	перезаписать	указатель	обработчик	исключение	указать	на	вредоносный	программа	а	не	на	фактический	обработчик	исключение	затем	пользователь	потребоваться	вызвать	исключение	как	только	это	исключение	быть	перехватить	оно	быть	перенаправить	на	вредоносный	функция	который	смочь	отбросить	исключение	и	выполнить	назначение	перезапись	настоящий	время	вы	вероятно	уже	понять	что	неограниченный	доступ	к	стечь	крайне	опасный	кроме	тот	даже	если	канарейка	стек	выступать	в	качество	защита	злоумышленник	мочь	перенаправить	выполнение	программа	или	даже	добавить	в	вредоносный	функция	с	помощь	атака	форматировать	строка	тем	не	менее	несмотря	на	множество	атака	есть	и	множество	защита	в	это	раздел	мы	поговорить	о	предотвращение	выполнение	дать	и	неисполняемый	память	принцип	защита		можно	объяснить	на	пример	старый	игра	в	палочка	в	палочка	два	игрок	начинать	с	сетка	точка	в	течение	каждый	ход	игрок	мочь	провести	один	линия	соединять	два	точка	если	игрок	закрывать	квадрат	он	окрашивать	он	в	красный	игрок	или	игрок		выигрывать	тот	у	кто	большой	цветной	квадрат	в	конец	игра	теперь	представить	игровой	пол	в	свой	голов	или	посмотреть	картинка	ниже	с	игра	в	палочкивместо	точка	и	квадрат	давать	представимый	что	каждый	квадрат	являться	область	память	на	ваш	компьютер	красный	область	это	область	который	позволять	выполнять	дать	а	область	не	позволять	выполнять	дать	это	именно	то	что	делать		это	просто	механизм	который	блокировать	выполнение	вредоносный	код	в	разный	область	память	например	в	большинство	современный	программа	в	стек	включить	поддержка	поэтому	злоумышленник	не	мочь	выполнять	вредоносный	нагрузка	через	стек	в	идеальный	мир	компьютер	использовать	бы	политика	в	весь	раздел	память	однако	есть	несколько	причина	по	который	это	не	происходить	политика	это	политика	в	который	память	мочь	использоваться	только	для	запись	или	исполнение	но	никогда	для	тот	и	другой	сразу	этот	политика	нельзя	применять	для	весь	раздел	память	по	ряд	причина	но	в	некоторый	область	память	такой	как	стек	и	это	сделать	что	затруднять	эксплуатация	ряд	уязвимость	перевод	статья	николаеваварвара	николаевазагрузка		только	самый	важный	новостив	успешно	подтвердить	свой	подписка	на	и	ждать	первое	письмо	оно	уже	совсем	скоро	и	обзор	самый	важный	из	мир	разработка	даже	не	нужно	переходить	по	ссылка	просто	прочитать	один	письмо	присылать	каждый	день	по	вечер	выглядеть	это	примерно	так		