алексей	гришин	куратор	направление	информационный	безопасность	школа	и	безопасность	ущерб	российский	компания	от	киберпреступник	составлять	миллиард	рубль	и	это	только	тот	случай	который	предаваться	огласка	чаща	всего	компания	стараться	скрыть	что	они	система	быть	взломать	а	дать	украсть	ведь	помимо	единовременный	финансовый	потеря	успешный	атака	в	итог	приводить	к	падение	репутация	и	котировка	создание	система	информационный	безопасность	потребовать	от	крупный	компания	и	корпорация	финансовый	вложение	от	дорогостоящий	по	до	пентест	и	программа	начинающий	бизнес	не	мочь	позволить	себя	такой	расход	а	стартап	и	вовсе	пренебрегать	безопасность	ради	максимально	быстрый	выход	на	рынок	баланс	стоимость	программный	продукт	и	он	соблюсти	не	сложно	если	придерживаться	простой	рекомендация	ниже	совет	как	не	прогореть	на	выстраивание	стена	и	избежать	банальный	ошибка	хороший	проект	писаться	безопасно	с	один	строчка	код	рассуждать	о	тот	какой	язык	программирование	наименее	уязвимый	мы	не	быть	так	как	у	каждый	проект	свой	путь	к	выбор	инструмент	проектирование	и	уникальный	специфика	общий	рекомендация	пользоваться	проверить	решение	если	ошибка	обнаружить	на	низок	уровень	язык	программирование	это	подвергать	опасность	весь	проект	целиком	несмотря	на	то	что	передовой	технология	ускорять	разработка	и	делать	удобный	из	за	они	мочь	возникнуть	проблема	с	надёжность	и	безопасность	небольшой	запаздывание	для	бизнес	не	критично	но	и	слишком	отставать	тоже	не	стоить	пользоваться	язык	и	решение	динамично	развивающийся	и	выйти	из	тестирование	такой	подход	повысить	стабильность	ваш	разработка	и	вы	не	менять	платформа	из	за	критический	язык	база	дать	или	другой	компонент	подсистема	идентификация	и	аутентификация	являться	один	из	самый	важный	компонент	так	как	предоставлять	доступ	к	пользовательский	данные	нельзя	проектировать	продукт	так	чтобы	аутентификация	можно	быть	пропустить	в	критический	место	или	допускаться	бы	подмен	параметр	даже	если	вы	работать	над	приложение	по	поиск	и	создание	музыка	быть	неприятно	когда	злоумышленник	смочь	войти	под	имя	пользователь	узнать	о	он	предпочтение	а	тем	более	украсть	композиция	бережный	отношение	к	данные	и	проверка	они	корректность	залог	спокойствие	и	доверие	клиент	у	весь	современный	приложение	есть	внутренний	валюта	или	иной	способ	монетизация	а	для	банковский	продукт	безопасность	уж	точно	один	из	главный	критерий	оценка	простой	забытый	проверка	на	знак	в	процесс	передача	сумма	от	один	пользователь	другой	мочь	привести	к	катастрофический	последствие	отрицательный	знак	в	отправить	дать	к	обратный	операция	средство	с	получатель	уйти	отправитель	платёж	в	современный	мир	злоумышленник	охотиться	не	только	за	деньга	но	и	за	персональный	дать	пользователь	они	раскрытие	зачастую	оказываться	болезненный	чем	финансовый	потеря	на	один	из	последний	пример	хакер	взломать	сервис	и	получить	доступ	к	логин	почтовый	адрес	и	пароль	сто	миллион	пользователь	по	оценка	киберкриминалист	уязвимость	скорее	всего	скрываться	в	недостаточно	система	шифрование	пользовательский	пароль	прямая	финансовый	убыток	компания	не	понести	но	доверие	пользователь	потерять	начинающий	разработчик	по	всегда	экономить	время	на	тестирование	а	иногда	даже	вносить	модификация	код	сразу	на	работать	версия	сервис	помимо	ошибка	внутри	код	который	наверняка	быть	мочь	возникнуть	проблема	с	логика	поэтому	перед	запуск	проект	нужно	обязательно	протестировать	ошибка	логика	не	очевидный	и	трудно	предсказуемый	бывать	и	так	что	из	за	мелкий	программистский	при	получение	доступ	к	один	файл	пользователь	открываться	содержимое	папка	в	автоматический	режим	такой	ошибка	найти	сложно	ведь	функциональность	она	не	нарушать	а	вот	проблема	в	безопасность	добавлять	масса	обязательно	настраивать	и	постоянно	поддерживать	в	рабочий	состояние	система	логирование	это	единственный	способ	который	позволить	собирать	дать	о	пользователь	как	они	обращаться	зачем	с	какой	периодичность	какой	тип	запрос	посылать	чем	большой	дать	вы	быть	держать	в	свой	аналитический	система	тем	с	больший	вероятность	вы	удаться	вычислить	злоумышленник	при	попытка	взлом	или	если	атака	оказаться	успешный	вы	смочь	понять	через	какой	вектор	быть	удар	если	вы	информировать	о	свой	уязвимость	то	вы	смочь	они	устранить	не	забывать	о	регулярный	бэкап	ведь	злоумышленник	мочь	и	не	взламывать	проект	а	использовать	он	в	качество	платформа	для	распространение	вирус	изменить	некоторый	дать	на	сайт	или	внутри	приложение	изначально	запрограммировать	система	так	и	быть	продолжать	рассылать	контент	и	возможно	пожирать	сам	себя	искать	причина	поломка	в	это	случай	можно	быть	очень	долго	гораздо	быстрый	и	быть	откатиться	к	безопасный	состояние	код	только	после	настройка	система	логирование	и	бэкапирование	можно	выпускать	сервис	кроме	тот	система	мониторинг	помочь	вы	уберечь	себя	от	последствие	халатный	работа	администратор	информационный	система	а	также	помочь	в	тест	продукт	на	наличие	ошибка	использовать	шифрование	пользовательский	дать	там	где	оно	уместно	пароль	пользователь	он	персональный	информация	а	также	конфиденциальный	переписка	должный	храниться	в	зашифровать	вид	но	вот	загрузить	общедоступный	дать	шифровать	не	стоить	так	как	они	расшифровка	тратить	ресурс	и	не	приносить	польза	и	последний	не	пытаться	создать	абсолютно	неуязвимый	код	так	как	по	наш	мнение	безопасный	проект	не	бывать	экстремальный	ситуация	или	находчивый	злоумышленник	выводить	из	равновесие	даже	система	который	изначально	казаться	идеальный	проводить	аналогия	с	банковский	приложение	можно	сказать	что	задача	специалист	по	безопасность	сделать	так	чтобы	стоимость	атака	многократно	превышать	прибыль	который	теоретически	можно	получить	от	взлом	загрузка		только	самый	важный	новостив	успешно	подтвердить	свой	подписка	на	и	ждать	первое	письмо	оно	уже	совсем	скоро	и	обзор	самый	важный	из	мир	разработка	даже	не	нужно	переходить	по	ссылка	просто	прочитать	один	письмо	присылать	каждый	день	по	вечер	выглядеть	это	примерно	так		