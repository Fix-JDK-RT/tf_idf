в	этот	статья	мы	заглянуть	под	капот	программный	обеспечение	новичок	в	реверс	инжиниринг	получить	общий	представление	о	самый	процесс	исследование	по	общий	принцип	построение	программный	код	и	о	тот	как	читать	ассемблерный	код	примечание	программный	код	для	этот	статья	компилироваться	с	помощь	так	что	некоторый	функция	в	новый	версия	мочь	использоваться	по	другой	в	качество	дизассемблер	использоваться	переменный	один	из	основный	составлять	программирование	они	делиться	на	несколько	вид	вот	некоторый	из	они	стандартный	переменный	примечание	в	с		строка	не	примитивный	переменный	но	важный	понять	как	она	быть	выглядеть	в	машинный	код	давать	посмотреть	на	ассемблерный	код	инициализация	переменныхздесить	можно	увидеть	как	показывать	распределение	пространство	для	переменный	сначала	под	каждый	переменный	выделяться	пространство	а	потом	уже	она	инициализироваться	инициализация	переменныхкак	только	пространство	выделить	в	он	помещаться	значение	который	мы	хотеть	присвоить	переменный	инициализация	большинство	переменный	представить	на	картинка	выше	но	как	инициализироваться	строка	показать	ниже	инициализация	строковый	переменный	в	для	инициализация	строка	требоваться	вызов	встроить	функция	примечание	здесь	речь	о	тот	что	переменный	помещаться	в	стек	и	затем	использоваться	в	качество	параметр	для	функция	вывод	концепт	функция	с	параметр	быть	рассмотреть	поздний	для	вывод	дать	быть	решить	использовать		а	не	стандартный	вывод	теперь	посмотреть	на	машинный	код	сначала	строковый	литерал	вывод	строковый	литералакака	видеть	строковый	литерал	сначала	помещаться	в	стек	для	вызов	в	качество	параметр	функция		теперь	посмотреть	на	вывод	один	из	переменный	вывод	переменнойкак	можно	заметить	сначала	переменный	помещаться	в	регистр	который	в	свой	очередь	записываться	в	стек	вместе	с	строковый	литерал	использовать	для	обозначение	целочисленный	вывод	этот	переменный	затем	браться	из	стек	и	использоваться	в	качество	параметр	при	вызов	функция		сейчас	мы	поговорить	о	следующий	математический	операция	каждый	операция	в	ассемблерный	код	сначала	присвоить	переменный	значение	в	шестнадцатеричный	система	счисление	или	в	десятичный	переменный	что	равно	в	десятичный	инициализация	переменныхдлить	сложение	мы	использовать	инструкция	сложениепрь	вычитание	использоваться	инструкция	вычитаниепрь	умножение	умножениедля	деление	использоваться	инструкция	также	мы	использовать	оператор	чтобы	удвоить	размер	и	результат	деление	уместиться	в	регистр	делениепереть	поразрядный	конъюнкция	использоваться	инструкция	поразрядный	конъюнкцияпереть	поразрядный	дизъюнкция	поразрядный	дизъюнкцияпереть	поразрядный	исключать	или	поразрядный	исключать	илипереть	поразрядный	отрицание	поразрядный	отрицаниепрь	битовый	сдвиг	вправо	битовый	сдвиг	вправпереть	битовый	сдвиг	влево	битовый	сдвиг	влевома	рассмотреть	три	вид	функция	вызов	функция	сначала	посмотреть	как	происходить	вызов	функция		и		который	вызываться	без	параметр	вызов	функция	без	параметровфункция		просто	выводить	сообщение	функция	этот	функция	использовать	инструкция	но	только	для	возврат	к	предыдущий	местоположение	чтобы	программа	мочь	продолжить	свой	работа	после	завершение	функция		посмотреть	на	функция		который	генерировать	случайный	целое	число	с	помощь	функция	с			и	затем	он	возвращать	функция	сначала	выделяться	место	под	переменный	затем	вызываться	функция		результат	который	помещаться	в	регистр	затем	значение	помещаться	в	место	выделить	под	переменный	фактически	присваивать	переменный	результат	функция		наконец	переменный	помещаться	в	регистр	чтобы	функция	мочь	он	использовать	в	качество	возвращать	параметр	теперь	когда	мы	разобраться	как	происходить	вызов	функция	без	параметр	и	что	происходить	при	возврат	значение	из	функция	поговорить	о	вызов	функция	с	параметр	вызов	такой	функция	выглядеть	следующий	образ	вызов	функция	с	параметрамистрок	в	с		требовать	вызов	функция	но	концепция	вызов	функция	с	параметр	не	зависеть	от	тип	дать	сначала	переменный	помещаться	в	регистр	затем	оттуда	в	стек	а	потом	происходить	вызов	функция	посмотреть	на	код	функция	функция	этот	функция	строка	целое	число	и	символ	и	печатать	они	с	помощь	функция		как	видеть	сначала	переменный	размещаться	в	начало	функция	затем	они	помещаться	в	стек	для	вызов	в	качество	параметр	функция		очень	просто	теперь	когда	мы	изучить	вызов	функция	вывод	переменный	и	математик	к	контроль	порядок	выполнение	код		сначала	мы	изучить	цикл	графический	обзор	цикл	чем	разбить	ассемблерный	код	на	более	мелкий	часть	посмотреть	на	общий	вариант	как	вы	мочь	видеть	когда	цикл	запускаться	у	он	есть	вариант	цикл	подробносначать	сравниваться	переменный	и	чтобы	проверить	достигнуть	ли	переменный	максимальный	значение	если	переменный	не	большой	или	не	равный	переменный	то	подпрограмма	по	красный	стрелка	вниз	влево	и	вывести	переменный	затем	увеличиться	на	и	возврат	к	начало	цикл	если	переменный	большой	или	равный	то	подпрограмма	по	стрелка	то	есть	выйти	из	цикл	и	в	основный	программа	теперь	давать	взглянуть	на	цикл	цикл	это	цикл	генерироваться	случайный	число	от	до	если	число	большой	то	выход	из	цикл	с	слово	в	противный	случай	продолжиться	работа	в	цикл	в	машинный	код	переменный	а	сначала	инициализироваться	и	приравниваться	к	нуль	а	затем	инициализироваться	цикл	сравниваться	с	шестнадцатеричный	число	который	равно	в	десятичный	система	счисление	если	а	не	большой	и	не	равно	то	генерироваться	новое	случайный	число	который	записываться	в	а	и	снова	происходить	сравнение	если	а	большой	или	равно	то	происходить	выход	из	цикл	и	возврат	в	основный	программа	теперь	поговорить	о	условный	оператор	для	начало	посмотреть	код	этот	функция	генерировать	случайный	число	от	до	и	сохранять	получиться	значение	в	переменный	а	если	а	большой	то	программа	вывести	если	а	маленький	но	большой	если	маленький	посмотреть	на	ассемблерный	граф	ассемблерный	граф	для	условный	оператораграф	структурировать	аналогично	фактический	код	потому	что	условный	оператор	выглядеть	просто	то	иначе	если	посмотреть	на	один	сверху	пара	стрелка	то	оператор	предшествовать	сравнение	а	с	что	равно	в	десятичный	система	счисление	если	а	большой	или	равно	то	подпрограмма	вывести	и	в	основный	программа	в	друг	случай	сравнение	а	с		так	быть	продолжаться	пока	программа	не	вывести	что	нибыть	на	экран	и	не	оператор	выбор	очень	похожий	на	оператор	условие	только	в	оператор	выбор	один	переменный	или	выражение	сравниваться	с	несколько	возможный	эквивалентность		посмотреть	код	в	этот	функция	переменный	а	получать	случайный	значение	от	до	затем	а	сравниваться	с	несколько	случай	использовать	если	значение	а	равно	один	из	случай	то	на	экран	появиться	соответствующий	число	а	затем	выход	из	оператор	выбор	и	возврат	в	основный	программа	оператор	выбор	не	следовать	правило	то	иначе	в	отличие	от	условный	оператор	вместо	это	программа	сравнивать	входной	значение	с	существующий	случай	и	выполнять	только	тот	случай	который	соответствовать	входной	значение	рассмотреть	два	один	блок	дробный	два	один	блок	оператор	выборасначать	генерироваться	случайный	число	и	записываться	в	а	теперь	программа	инициализировать	оператор	выбор	приравнять	временной	переменный	к	а	затем	проверять	что	она	равный	хотя	бы	один	из	случай	если	требоваться	значение	по	умолчание	то	программа	по	стрелка	в	секция	окончательный	возврат	из	подпрограмма	иначе	программа	совершить	переход	в	нужный	если	равно	то	код	в	секция	который	показать	выше	вывести	и	затем	в	секция	возврат	в	это	раздел	мы	рассмотреть	ввод	пользователь	с	помощь	поток	из		в	один	посмотреть	на	код	в	этот	функция	мы	просто	записывать	строка	в	переменный	с	помощь	функция		и	затем	выводить	предложение	с	помощь	оператор		это	в	машинный	код	в	один	функция		сначала	происходить	инициализация	строковый	переменный	затем	вызов	и	запись	дать	в	функция		детальнеесначать	программа	устанавливать	содержимое	переменный	в	затем	помещать	в	стек	откуда	значение	переменный	быть	использоваться	в	качество	параметр	для	поток	затем	вызываться	оператор	поток			он	вывод	помещаться	в	который	затем	помещаться	в	стек	для	оператор		мы	рассмотреть	лишь	основной	принцип	работа	программный	обеспечение	на	низок	уровень	без	этот	основа	невозможно	понимать	работа	по	и	соответственно	заниматься	он	исследование	смотреть	также	эксплуатация	уязвимость	исполняемый	файл	для	новичковперевод	статья	николаеваварвара	николаевазагрузка		только	самый	важный	новостив	успешно	подтвердить	свой	подписка	на	и	ждать	первое	письмо	оно	уже	совсем	скоро	и	обзор	самый	важный	из	мир	разработка	даже	не	нужно	переходить	по	ссылка	просто	прочитать	один	письмо	присылать	каждый	день	по	вечер	выглядеть	это	примерно	так		